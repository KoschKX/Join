

File: contacts\services\contacts-crud.service.ts
------------------------------
Method: createContact
Lines: 20
Line Number: 26
Content Preview:

  async createContact(contactData: Partial<Contact>, existingContacts: Contact[] = []): Promise<Contact> {
    if (!contactData.name || !contactData.email) {
      throw new Error('Name and email are......

==================================================

Method: updateContact
Lines: 18
Line Number: 55
Content Preview:

  async updateContact(contactId: string, contactData: Partial<Contact>): Promise<Contact> {
    if (!contactId) {
      throw new Error('Contact ID is required for update');
    }
    try {
      con......

==================================================

Method: deleteContact
Lines: 15
Line Number: 81
Content Preview:

  async deleteContact(contactId: string): Promise<void> {
    if (!contactId) {
      throw new Error('Contact ID is required for deletion');
    }
    const contact = await this.getContactById(conta......

==================================================

File: contacts\services\contacts-display.service.ts
------------------------------
Method: truncateEmail
Lines: 16
Line Number: 71
Content Preview:

  truncateEmail(email: string, maxLength: number = 23): string {
    if (!email) return '';
    if (email.length <= maxLength) {
      return email;
    }
    const atIndex = email.lastIndexOf('@');
......

==================================================

File: contacts\services\contacts-form.service.ts
------------------------------
Method: getFieldError
Lines: 21
Line Number: 137
Content Preview:

  getFieldError(fieldName: string): string {
    const field = this.contactForm.get(fieldName);
    if (!field || !field.errors || !field.touched) {
      return '';
    }
    const errors = field.er......

==================================================

File: directives\flatpickr.directive.ts
------------------------------
Method: initializeFlatpickr
Lines: 20
Line Number: 49
Content Preview:

  private initializeFlatpickr(): void {
    const defaultOptions = {
      dateFormat: 'm/d/Y',
      allowInput: true,
      minDate: 'today',
      locale: {
        firstDayOfWeek: 0
      },
    ......

==================================================

Method: setupIconClick
Lines: 15
Line Number: 86
Content Preview:

  private setupIconClick(): void {
    setTimeout(() => {
      const wrapper = this.elementRef.nativeElement.parentElement;
      if (wrapper) {
        const calendarIcon = wrapper.querySelector('.......

==================================================

Method: initializeFlatpickr
Lines: 20
Line Number: 50
Content Preview:
initializeFlatpickr(): void {
    const defaultOptions = {
      dateFormat: 'm/d/Y',
      allowInput: true,
      minDate: 'today',
      locale: {
        firstDayOfWeek: 0
      },
      onChange:......

==================================================

Method: setupIconClick
Lines: 15
Line Number: 87
Content Preview:
setupIconClick(): void {
    setTimeout(() => {
      const wrapper = this.elementRef.nativeElement.parentElement;
      if (wrapper) {
        const calendarIcon = wrapper.querySelector('.date-icon')......

==================================================

File: onboarding-overlay\onboarding-overlay.component.ts
------------------------------
Method: subscribeToOnboarding
Lines: 17
Line Number: 70
Content Preview:

  private subscribeToOnboarding(): void {
    const showSub = this.onboardingService.showOnboarding$.subscribe(show => {
      this.showOnboarding = show;
      if (show) {
        setTimeout(() => t......

==================================================

Method: updateHighlightPosition
Lines: 18
Line Number: 92
Content Preview:

  private updateHighlightPosition(): void {
    if (!this.currentStep || !this.showOnboarding) return;
    const targetElement = document.querySelector(this.currentStep.targetElementSelector);
    if......

==================================================

Method: subscribeToOnboarding
Lines: 17
Line Number: 71
Content Preview:
subscribeToOnboarding(): void {
    const showSub = this.onboardingService.showOnboarding$.subscribe(show => {
      this.showOnboarding = show;
      if (show) {
        setTimeout(() => this.updateH......

==================================================

Method: updateHighlightPosition
Lines: 18
Line Number: 93
Content Preview:
updateHighlightPosition(): void {
    if (!this.currentStep || !this.showOnboarding) return;
    const targetElement = document.querySelector(this.currentStep.targetElementSelector);
    if (targetEle......

==================================================

File: shared\services\auth.service.ts
------------------------------
Method: initializeAuthListener
Lines: 18
Line Number: 47
Content Preview:

  private initializeAuthListener(): void {
    runInInjectionContext(this.injector, () => {
      onAuthStateChanged(this.auth, (firebaseUser) => {
        if (firebaseUser) {
          const user = ......

==================================================

Method: waitForAuthReady
Lines: 17
Line Number: 69
Content Preview:

  async waitForAuthReady(): Promise<User | null> {
    return new Promise((resolve) => {
      runInInjectionContext(this.injector, () => {
        const unsubscribe = onAuthStateChanged(this.auth, (......

==================================================

Method: register
Lines: 25
Line Number: 145
Content Preview:

  async register(name: string, email: string, password: string): Promise<User> {
    try {
      const userCredential = await runInInjectionContext(this.injector, () => 
        createUserWithEmailAn......

==================================================

Method: handleAuthError
Lines: 20
Line Number: 324
Content Preview:

  private handleAuthError(error: any): Error {
    console.error('Auth error:', error);

    switch (error.code) {
      case 'auth/user-not-found':
      case 'auth/wrong-password':
        return n......

==================================================

Method: updateUserProfile
Lines: 21
Line Number: 387
Content Preview:

  async updateUserProfile(name: string): Promise<void> {
    if (!this.auth.currentUser) {
      throw new Error('No authenticated user found');
    }
    try {
      await runInInjectionContext(this......

==================================================

Method: initializeAuthListener
Lines: 18
Line Number: 48
Content Preview:
initializeAuthListener(): void {
    runInInjectionContext(this.injector, () => {
      onAuthStateChanged(this.auth, (firebaseUser) => {
        if (firebaseUser) {
          const user = this.mapFir......

==================================================

File: shared\services\onboarding.service.ts
------------------------------
Method: checkAndStartOnboarding
Lines: 19
Line Number: 95
Content Preview:

  private checkAndStartOnboarding(): void {
    console.log('OnboardingService: checkAndStartOnboarding called, isAuthenticated:', this.authService.isAuthenticated);
    if (!this.authService.isAuthe......

==================================================

Method: checkAndStartOnboarding
Lines: 19
Line Number: 96
Content Preview:
checkAndStartOnboarding(): void {
    console.log('OnboardingService: checkAndStartOnboarding called, isAuthenticated:', this.authService.isAuthenticated);
    if (!this.authService.isAuthenticated) {......

==================================================

File: shared\services\task.service.ts
------------------------------
Method: updateTaskInColumn
Lines: 15
Line Number: 146
Content Preview:

  private updateTaskInColumn(
    column: TaskColumn, 
    taskId: string, 
    updatedTask: Partial<Task>
  ): boolean {
    const taskIndex = this.tasks[column].findIndex(task => task.id === taskId......

==================================================

Method: toggleSubtaskInColumn
Lines: 15
Line Number: 276
Content Preview:

  private toggleSubtaskInColumn(
    column: TaskColumn, 
    taskId: string, 
    subtaskId: string
  ): boolean {
    const task = this.tasks[column].find(task => task.id === taskId);
    if (task)......

==================================================

File: shared\services\touch-detection.service.ts
------------------------------
Method: isPrimaryTouchDevice
Lines: 15
Line Number: 69
Content Preview:

  isPrimaryTouchDevice(): boolean {
    const screenWidth = window.innerWidth;
    const screenHeight = window.innerHeight;
    const isTouchCapable = this.isTouchDevice();
    if (!isTouchCapable) {......

==================================================

File: shared\services\auth\auth-firebase.service.ts
------------------------------
Method: waitForAuthReady
Lines: 15
Line Number: 39
Content Preview:

  async waitForAuthReady(): Promise<User | null> {
    return new Promise((resolve) => {
      runInInjectionContext(this.injector, () => {
        const unsubscribe = onAuthStateChanged(this.auth, (......

==================================================

Method: register
Lines: 19
Line Number: 83
Content Preview:

  async register(name: string, email: string, password: string): Promise<User> {
    try {
      const userCredential = await runInInjectionContext(this.injector, () => 
        createUserWithEmailAn......

==================================================

Method: handleAuthError
Lines: 34
Line Number: 183
Content Preview:

  private handleAuthError(error: any): Error {
    let message = 'An unexpected error occurred. Please try again.';
    switch (error.code) {
      case 'auth/user-not-found':
      case 'auth/wrong-......

==================================================

File: shared\services\auth\auth-state.service.ts
------------------------------
Method: loadUserFromStorage
Lines: 19
Line Number: 63
Content Preview:

  loadUserFromStorage(): void {
    try {
      const userData = localStorage.getItem(this.STORAGE_KEY);
      if (userData) {
        const user: User = JSON.parse(userData);
        const sessionAg......

==================================================

Method: loadUserFromStorage
Lines: 19
Line Number: 64
Content Preview:
loadUserFromStorage(): void {
    try {
      const userData = localStorage.getItem(this.STORAGE_KEY);
      if (userData) {
        const user: User = JSON.parse(userData);
        const sessionAge =......

==================================================

File: shared\services\auth\auth.service.ts
------------------------------
Method: initializeAuth
Lines: 21
Line Number: 192
Content Preview:

  private async initializeAuth(): Promise<void> {
    try {
      this.authState.loadUserFromStorage();
      this.authFirebase.initializeAuthListener((user) => {
        if (user) {
          this.a......

==================================================

File: summary\summary.component.ts
------------------------------
Method: getUrgentTasksDueToday
Lines: 15
Line Number: 299
Content Preview:

  getUrgentTasksDueToday(): number {
    const today = new Date();
    today.setHours(0, 0, 0, 0);
    return this.tasks.filter(task => {
      if (task.priority !== 'urgent') {
        return false;......

==================================================

Method: navigateToNearestUrgentTask
Lines: 24
Line Number: 465
Content Preview:

  navigateToNearestUrgentTask(): void {
    const today = new Date();
    today.setHours(0, 0, 0, 0);
    const urgentTasksWithDueDate = this.tasks.filter(task => 
      task.priority === 'urgent' &&......

==================================================

Method: navigateToNearestUrgentTask
Lines: 24
Line Number: 466
Content Preview:
navigateToNearestUrgentTask(): void {
    const today = new Date();
    today.setHours(0, 0, 0, 0);
    const urgentTasksWithDueDate = this.tasks.filter(task => 
      task.priority === 'urgent' && 
 ......

==================================================

