

Method: register
Lines: 19
Line Number: 83
Content Preview:

  async register(name: string, email: string, password: string): Promise<User> {
    try {
      const userCredential = await runInInjectionContext(this.injector, () => 
        createUserWithEmailAn......

==================================================

Method: handleAuthError
Lines: 34
Line Number: 183
Content Preview:

  private handleAuthError(error: any): Error {
    let message = 'An unexpected error occurred. Please try again.';
    switch (error.code) {
      case 'auth/user-not-found':
      case 'auth/wrong-......

==================================================

File: shared\services\auth\auth-state.service.ts
------------------------------
Method: loadUserFromStorage
Lines: 19
Line Number: 63
Content Preview:

  loadUserFromStorage(): void {
    try {
      const userData = localStorage.getItem(this.STORAGE_KEY);
      if (userData) {
        const user: User = JSON.parse(userData);
        const sessionAg......

==================================================

Method: loadUserFromStorage
Lines: 19
Line Number: 64
Content Preview:
loadUserFromStorage(): void {
    try {
      const userData = localStorage.getItem(this.STORAGE_KEY);
      if (userData) {
        const user: User = JSON.parse(userData);
        const sessionAge =......

==================================================

File: shared\services\auth\auth.service.ts
------------------------------
Method: initializeAuth
Lines: 21
Line Number: 192
Content Preview:

  private async initializeAuth(): Promise<void> {
    try {
      this.authState.loadUserFromStorage();
      this.authFirebase.initializeAuthListener((user) => {
        if (user) {
          this.a......

==================================================

File: summary\summary.component.ts
------------------------------
Method: getUrgentTasksDueToday
Lines: 15
Line Number: 299
Content Preview:

  getUrgentTasksDueToday(): number {
    const today = new Date();
    today.setHours(0, 0, 0, 0);
    return this.tasks.filter(task => {
      if (task.priority !== 'urgent') {
        return false;......

==================================================

Method: navigateToNearestUrgentTask
Lines: 24
Line Number: 465
Content Preview:

  navigateToNearestUrgentTask(): void {
    const today = new Date();
    today.setHours(0, 0, 0, 0);
    const urgentTasksWithDueDate = this.tasks.filter(task => 
      task.priority === 'urgent' &&......

==================================================

Method: navigateToNearestUrgentTask
Lines: 24
Line Number: 466
Content Preview:
navigateToNearestUrgentTask(): void {
    const today = new Date();
    today.setHours(0, 0, 0, 0);
    const urgentTasksWithDueDate = this.tasks.filter(task => 
      task.priority === 'urgent' && 
 ......

==================================================

