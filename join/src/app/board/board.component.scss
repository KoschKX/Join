// Board Component Main Styles
// Import all partials using @use instead of @import
@use './styles/header';
@use './styles/board-layout';
@use './styles/task-card';
@use './styles/add-task-overlay';
@use './styles/task-details-overlay';
@use './styles/task-edit-overlay';
@use './styles/delete-confirmation-overlay';
@use './styles/mobile-move-overlay';
@use './styles/board-thumbnail';
@use './styles/drag-and-drop';
@use './styles/responsive';

// Task details actions (shared between overlays)
.task-details-actions,
.task-details-actions-fixed {
  display: flex;
  justify-content: flex-end;
  gap: 16px;
  margin-top: 0;
  
  button {
    background: none;
    border: none;
    cursor: pointer;
    padding: 8px;
    border-radius: 8px;
    transition: all 0.2s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    
    img {
      width: 20px;
      height: 20px;
    }
    
    &.delete-btn {
      &:hover {
        background-color: rgba(255, 61, 61, 0.1);
        
        img {
          filter: brightness(0) saturate(100%) invert(35%) sepia(95%) saturate(7471%) hue-rotate(356deg) brightness(107%) contrast(102%);
        }
      }
    }
    
    &.edit-btn {
      &:hover {
        background-color: rgba(42, 54, 71, 0.1);
        
        img {
          filter: brightness(0) saturate(100%) invert(25%) sepia(8%) saturate(1029%) hue-rotate(202deg) brightness(0%) contrast(85%);
        }
      }
    }
  }
}

// Spezifisch für taskEditOverlay
.taskEditOverlay {
  .subtask-item {
    .subtask-input-group {
      position: relative;
      display: flex;
      align-items: center;
      gap: 0.5rem;
      padding: 0.75rem;
      border-radius: 8px;
      transition: background-color 0.2s ease;
      position: relative;
      
      // Sehr leichter Hover-Effekt für die ganze Zeile
      &:hover {
        background-color: rgba(0, 0, 0, 0.02); // Minimal grauer Hintergrund
        
        .subtask-hover-actions {
          opacity: 1;
          visibility: visible;
        }
      }
      
      // Input nimmt verfügbaren Platz
      .form-input {
        flex: 1;
        margin-right: auto;
        width: 100%;
        padding-right: 60px; // Weniger Padding - Icons sind jetzt kleiner
        box-sizing: border-box;
      }
    }
    
    // Hover Actions Container - versteckt bis hover
    .subtask-hover-actions {
      display: flex;
      gap: 16px; // Fester Abstand zwischen den Buttons
      align-items: center;
      opacity: 0;
      visibility: hidden;
      transition: all 0.2s ease;
      position: relative; // Für den Divider
      
      .edit-subtask-btn,
      .remove-subtask-btn {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 32px;
        height: 32px;
        border: none;
        background: transparent;
        border-radius: 6px;
        cursor: pointer;
        transition: transform 0.2s ease; // Nur Transform-Animation
        
        img {
          width: 18px;
          height: 18px;
          opacity: 0.6;
          transition: opacity 0.15s ease;
        }
        
        // Hover-Effekt: Leichte Vergrößerung + Opacity
        &:hover {
          transform: scale(1.1); // 10% Vergrößerung
          
          img {
            opacity: 1; // Vollständige Sichtbarkeit
          }
        }
        
        // Active-State für besseres Feedback
        &:active {
          transform: scale(1.05); // Leicht kleiner beim Klick
        }
      }
      
      // Divider genau mittig zwischen den Buttons - UNABHÄNGIG von Hover
      &::after {
        content: '';
        position: absolute;
        left: 50%; // Genau in der Mitte
        top: 50%;
        transform: translate(-50%, -50%); // Perfekte Zentrierung
        width: 1px;
        height: 20px;
        background-color: rgba(0, 0, 0, 0.2);
        z-index: 1;
        pointer-events: none; // Kein Hover-Effekt auf den Divider
      }
    }
  }
}

// Custom Flatpickr styling for Board overlays
:host ::ng-deep .flatpickr-calendar {
  border-radius: 8px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  border: 1px solid var(--color-greyed-out);
  font-family: var(--font-main);
  z-index: 10000; // Ensure it's above overlays
}

:host ::ng-deep .flatpickr-day {
  &:hover {
    background-color: var(--color-accent);
    color: white;
  }
  
  &.selected {
    background-color: var(--color-accent);
    border-color: var(--color-accent);
    color: white;
  }
  
  &.today {
    border-color: var(--color-accent);
  }
}

// Responsive Design - 1000px und darunter
@media (max-width: 1000px) {
  .component-title-bar {
    flex-direction: column;
    align-items: flex-start;
    gap: 20px;
    
    // Erste Zeile: Titel und + Button
    .title-with-add-button {
      display: flex;
      justify-content: space-between;
      align-items: center;
      width: 100%;
    }
    
    .component-title {
      margin: 0;
    }
    
    // Größerer Mobile Add Button mit CSS-basiertem dünnem +
    .mobile-add-button {
      display: flex;
      align-items: center;
      justify-content: center;
      width: 40px;
      height: 40px;
      background-color: #2a3647;
      color: white;
      border: none;
      border-radius: 10px;
      cursor: pointer;
      transition: background-color 0.2s ease;
      position: relative;
      
      // Text "+" ausblenden
      font-size: 0;
      
      // CSS-basiertes + Zeichen
      &::before,
      &::after {
        content: '';
        position: absolute;
        background-color: white;
        border-radius: 1px;
      }
      
      // Horizontale Linie des +
      &::before {
        width: 32px;
        height: 2px;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
      }
      
      // Vertikale Linie des +
      &::after {
        width: 2px;
        height: 32px;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
      }
      
      &:hover {
        background-color: #29abe2;
      }
    }
    
    // Desktop Search & Add Button verstecken
    .search-add-box.desktop-only {
      display: none;
    }
    
    // Mobile Search Box anzeigen
    .mobile-only.mobile-search-box {
      display: flex;
      width: 100%;
      position: relative;
      
      .search-input {
        width: 100%;
        padding: 12px 50px 12px 20px;
        font-size: 16px;
        border: 1px solid #d1d5db;
        border-radius: 10px;
        background-color: white;
        
        &::placeholder {
          color: #a8a8a8;
        }
        
        &:focus {
          outline: none;
          border-color: #29abe2;
          box-shadow: 0 0 0 2px rgba(41, 171, 226, 0.2);
        }
      }
      
      .search-icon {
        position: absolute;
        right: 15px;
        top: 50%;
        transform: translateY(-50%);
        width: 20px;
        height: 20px;
        pointer-events: none;
      }
    }
  }
}

// Für noch kleinere Bildschirme (768px und darunter)
@media (max-width: 768px) {
  .component-title-bar {
    padding: 15px 20px;
    
    .component-title {
      font-size: 36px;
    }
    
    .mobile-search-box {
      .search-input {
        padding: 10px 45px 10px 15px;
        font-size: 14px;
      }
      
      .search-icon {
        width: 18px;
        height: 18px;
        right: 12px;
      }
    }
  }
}

/* Wrapper für Input und Button */
.add-subtask-input-wrapper {
  display: flex;
  align-items: center;
  width: 100%;
  margin-top: 8px;
  position: relative;
  margin-bottom: 16px;
}

/* Input-Feld */
.add-subtask-input-wrapper .form-input {
  flex: 1;
  border: 1px solid #e0e0e0;
  border-radius: 8px 0 0 8px;
  padding: 10px 16px;
  font-size: 16px;
  background: #fff;
  outline: none;
  transition: border 0.2s;
  box-shadow: none;
  width: 100%;
  padding-right: 44px; /* Platz für das Plus-Icon */
  border-radius: 8px;
  border: 1px solid #e0e0e0;
  height: 40px;
  font-size: 16px;
  box-sizing: border-box;
}

/* Plus-Button */
.add-subtask-input-wrapper .plus-btn {
  position: absolute;
  top: 50%;
  right: 8px;
  transform: translateY(-50%);
  height: 28px;
  width: 28px;
  border: none;
  background: none;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  padding: 0;
}

.add-subtask-input-wrapper .plus-btn img {
  width: 20px;
  height: 20px;
  opacity: 0.6;
}

.add-subtask-input-wrapper .plus-btn:disabled img {
  opacity: 0.3;
}

/* Optional: Fokus-Style */
.add-subtask-input-wrapper .form-input:focus {
  border-color: #5ba4cf;
}

// Spezifisches Styling für ausgegraute Subtasks im Edit-Overlay
.taskEditOverlay .subtask-item .form-input.grayed {
  background: #f4f4f4 !important;
  color: #b0b0b0 !important;
  border: 1px solid #e0e0e0 !important;
  cursor: not-allowed !important;
}

// Noch spezifischer für readonly Felder
.taskEditOverlay input[readonly].form-input.grayed {
  background: #f4f4f4 !important;
  color: #b0b0b0 !important;
  border: 1px solid #e0e0e0 !important;
  cursor: not-allowed !important;
}

.form-input.grayed {
  background: #f4f4f4;
  color: #b0b0b0;
  border: 1px solid #e0e0e0;
  cursor: not-allowed;
}

/* Neue Styles für die Subtask-Icons im Edit-Overlay */
.subtask-input-actions {
  position: absolute;
  right: 24px; // Mehr Abstand vom rechten Rand
  top: 50%;
  transform: translateY(-50%);
  display: flex;
  align-items: center;
  gap: 6px; // Weniger Abstand zwischen Icons
  z-index: 2;
  background: transparent;
  height: 24px; // Begrenzte Höhe
}

.subtask-input-actions .remove-subtask-btn,
.subtask-input-actions .save-subtask-btn {
  background: none;
  border: none;
  padding: 0;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 20px;
  height: 20px;
}

.subtask-input-actions img {
  width: 16px !important;
  height: 16px !important;
  filter: brightness(0) saturate(100%) invert(35%) sepia(0%) saturate(0%) hue-rotate(0deg) brightness(60%) contrast(100%);
  opacity: 0.7;
}

.subtask-divider {
  width: 1px;
  height: 16px; // Kleinere Höhe
  background: #999;
  margin: 0 2px; // Weniger Margin
  display: inline-block;
}

// Global placeholder styles - ensure all placeholders are always gray
input::placeholder,
textarea::placeholder,
.form-input::placeholder,
.form-textarea::placeholder {
  color: #d1d7db !important;
}

// Error state should NOT change placeholder color
input.error::placeholder,
textarea.error::placeholder,
.form-input.error::placeholder,
.form-textarea.error::placeholder {
  color: #d1d7db !important;
}